package com.kucaroom.mypicture.convert;import com.kucaroom.mypicture.domain.CollectPictureLog;import com.kucaroom.mypicture.domain.PictureItem;import com.kucaroom.mypicture.responseObject.CollectPictureLogRO;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.stream.Collectors;public class CollectPictureLogToRO {    /**     * 转化     *     * @author yezi     * @param  collectPictureLog     * @return     */    public static CollectPictureLogRO convert(CollectPictureLog collectPictureLog){        CollectPictureLogRO collectPictureLogRO = new CollectPictureLogRO();        collectPictureLogRO.setId(collectPictureLog.getId());        collectPictureLogRO.setPictureId(collectPictureLog.getPictureItemId());        collectPictureLogRO.setUserId(collectPictureLog.getUserId());        PictureItem pictureItem = collectPictureLog.getPictureInfo();        Map<String,Object> map = new HashMap<>();        map.put("url",pictureItem.getPicture());        map.put("width",pictureItem.getPictureWidth());        map.put("height",pictureItem.getPictureHeight());        map.put("id",pictureItem.getPicture());        collectPictureLogRO.setPictureInfo(map);        return  collectPictureLogRO;    }    /**     * 循环转化     *     * @author yezi     * @param collectPictureLogs     * @return     */    public static List<CollectPictureLogRO> convert(List<CollectPictureLog> collectPictureLogs){        return collectPictureLogs.stream().map(                e -> convert(e)        ).collect(Collectors.toList());    }}
package com.kucaroom.mypicture.convert;import com.kucaroom.mypicture.DTO.PictureDTO;import com.kucaroom.mypicture.domain.Picture;import com.kucaroom.mypicture.responseObject.PictureRO;import org.springframework.beans.BeanUtils;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Arrays;import java.util.Date;import java.util.List;import java.util.stream.Collectors;public class PictureDTOPictureRO {    private static final String[] color = {"#9932CC","#080808","#EE0000","#CD6600","#EE7621","#EE00EE","#3CB371","#0000AA","#388E8E","#FF69B4"};    /**     * 转化     *     * @author yezi     * @param pictureDTO     * @return     */    public static PictureRO convert(PictureDTO pictureDTO){        PictureRO pictureRO = new PictureRO();        BeanUtils.copyProperties(pictureDTO,pictureRO);        SimpleDateFormat sourceDate = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy.MM.dd");        try {            pictureRO.setCreateAt(simpleDateFormat.format(sourceDate.parse(pictureRO.getCreateAt())));        } catch (ParseException e) {            e.printStackTrace();        }        int index = (int)(Math.random() * PictureDTOPictureRO.color.length);        pictureRO.setColor(PictureDTOPictureRO.color[index]);        return  pictureRO;    }    /**     * 循环转化     *     * @author yezi     * @param pictureDTOList     * @return     */    public static List<PictureRO> convert(List<PictureDTO> pictureDTOList){        return pictureDTOList.stream().map(                e -> convert(e)        ).collect(Collectors.toList());    }}
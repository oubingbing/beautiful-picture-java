package com.kucaroom.mypicture.service.impl;import com.kucaroom.mypicture.DTO.PictureDTO;import com.kucaroom.mypicture.domain.Picture;import com.kucaroom.mypicture.enums.PictureStatusEnum;import com.kucaroom.mypicture.service.PictureService;import lombok.extern.slf4j.Slf4j;import org.junit.Assert;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.test.context.junit4.SpringRunner;import org.springframework.transaction.annotation.Transactional;import org.springframework.util.CollectionUtils;@Slf4j@Transactional@SpringBootTest@RunWith(SpringRunner.class)public class PictureServiceImplTest {    @Autowired    private PictureService pictureService;    @Test    public void findByStatus() {        Pageable pageable = new PageRequest(0,10);        Page<PictureDTO> result = pictureService.findByStatus(pageable,74,PictureStatusEnum.PICTURE_UP.getCode());        log.info(result.getContent().toString());        Assert.assertEquals(false,CollectionUtils.isEmpty(result.getContent()));        Pageable pageable1 = new PageRequest(0,10);        Page<PictureDTO> result1 = pictureService.findByStatus(pageable1,74,PictureStatusEnum.PICTURE_DOWN.getCode());        log.info(result1.getContent().toString());        Assert.assertEquals(true,CollectionUtils.isEmpty(result1.getContent()));    }    @Test    public void findById() {        PictureDTO pictureDTO = pictureService.findById(3);        Assert.assertNotNull(pictureDTO);    }}
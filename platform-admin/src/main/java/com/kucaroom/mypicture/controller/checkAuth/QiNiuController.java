package com.kucaroom.mypicture.controller.checkAuth;import com.kucaroom.mypicture.DTO.QiNiuAccountDTO;import com.kucaroom.mypicture.enums.QiNiuTypeEnum;import com.kucaroom.mypicture.enums.ResponseEnum;import com.kucaroom.mypicture.exception.WebApiException;import com.kucaroom.mypicture.form.QiNiuForm;import com.kucaroom.mypicture.responseObject.QiNiuRes;import com.kucaroom.mypicture.service.QiNiuService;import com.kucaroom.mypicture.util.ResponseData;import com.kucaroom.mypicture.util.ResponseUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import javax.validation.Valid;import java.util.HashMap;import java.util.Map;@Slf4j@Controller@RequestMapping("/admin/qiniu")public class QiNiuController {    @Autowired    private QiNiuService qiNiuService;    @Transactional    @ResponseBody    @PostMapping("/edit")    public ResponseData<QiNiuAccountDTO> update(@Valid QiNiuForm qiNiuForm,                                         BindingResult bindingResult,                                         HttpServletRequest request){        Integer appId = (Integer)request.getAttribute("appId");        QiNiuAccountDTO qiNiuAccountDTOResult = qiNiuService.findByAppId(appId);        if(qiNiuAccountDTOResult == null){            throw new WebApiException(ResponseEnum.QI_NIU_NOT_EXIST);        }        if(bindingResult.hasErrors()){            throw new WebApiException(ResponseEnum.PARAM_ERROR.getCode(),bindingResult.getFieldError().getDefaultMessage());        }        QiNiuAccountDTO qiNiuAccountDTO = new QiNiuAccountDTO();        BeanUtils.copyProperties(qiNiuForm,qiNiuAccountDTO);        qiNiuAccountDTO.setAppId(appId);        qiNiuAccountDTO.setType(QiNiuTypeEnum.CUSTOM.getCode());        qiNiuAccountDTO.setId(qiNiuAccountDTOResult.getId());        QiNiuAccountDTO resultDTO = qiNiuService.create(qiNiuAccountDTO);        QiNiuRes qiNiuRes = new QiNiuRes();        BeanUtils.copyProperties(resultDTO,qiNiuRes);        return ResponseUtil.success(resultDTO);    }    @ResponseBody    @GetMapping("/info")    public ResponseData<QiNiuRes> qiNiuInfo(HttpServletRequest request){        Integer appId = (Integer)request.getAttribute("appId");        QiNiuAccountDTO qiNiuAccountDTO = qiNiuService.findByAppId(appId);        if(qiNiuAccountDTO == null){            return null;        }        //QiNiuAccountDTO resultDTO = qiNiuService.create(qiNiuAccountDTO);        QiNiuRes qiNiuRes = new QiNiuRes();        BeanUtils.copyProperties(qiNiuAccountDTO,qiNiuRes);        return ResponseUtil.success(qiNiuRes);    }    /**     * 获取七牛token     *     * @author yezi     * @return     */    @ResponseBody    @GetMapping("/token")    public ResponseData uploadToken(){        String token = qiNiuService.getToken(74);        QiNiuAccountDTO qiNiuAccountDTO = qiNiuService.findAccountByAppId(74);        if(qiNiuAccountDTO == null){            throw new WebApiException(ResponseEnum.QI_NIU_NOT_EXIST);        }        Map<String,String> map = new HashMap<>();        map.put("token",token);        map.put("domain",qiNiuAccountDTO.getUrl());        return ResponseUtil.success(map);    }    @ResponseBody    @GetMapping("/refresh_token")    public ResponseData refreshToken(){        String token = qiNiuService.refreshToken(74);        QiNiuAccountDTO qiNiuAccountDTO = qiNiuService.findByAppId(74);        if(qiNiuAccountDTO == null){            throw new WebApiException(ResponseEnum.QI_NIU_NOT_EXIST);        }        Map<String,String> map = new HashMap<>();        map.put("token",token);        map.put("domain",qiNiuAccountDTO.getUrl());        return ResponseUtil.success(map);    }}
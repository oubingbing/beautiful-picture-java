package com.kucaroom.mypicture.controller;import com.kucaroom.mypicture.DTO.QiNiuAccountDTO;import com.kucaroom.mypicture.enums.QiNiuStatusEnum;import com.kucaroom.mypicture.enums.ResponseEnum;import com.kucaroom.mypicture.exception.WebApiException;import com.kucaroom.mypicture.form.QiNiuForm;import com.kucaroom.mypicture.responseObject.QiNiuRes;import com.kucaroom.mypicture.service.QiNiuService;import com.kucaroom.mypicture.util.ResponseData;import com.kucaroom.mypicture.util.ResponseUtil;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import javax.validation.Valid;@Controller@RequestMapping("/admin")public class QiNiuController {    @Autowired    private QiNiuService qiNiuService;    @ResponseBody    @PostMapping("/qiNiu/edit")    public ResponseData<QiNiuRes> update(@Valid QiNiuForm qiNiuForm,                                         BindingResult bindingResult,                                         HttpServletRequest request){        //Integer appId = (Integer)request.getAttribute("appId");        Integer appId = 74;        QiNiuAccountDTO qiNiuAccountDTOResult = qiNiuService.findByAppId(appId);        if(qiNiuAccountDTOResult == null){            throw new WebApiException(ResponseEnum.QI_NIU_NOT_EXIST);        }        if(bindingResult.hasErrors()){            throw new WebApiException(ResponseEnum.PARAM_ERROR.getCode(),bindingResult.getFieldError().getDefaultMessage());        }        QiNiuAccountDTO qiNiuAccountDTO = new QiNiuAccountDTO();        BeanUtils.copyProperties(qiNiuForm,qiNiuAccountDTO);        qiNiuAccountDTO.setAppId(appId);        qiNiuAccountDTO.setStatus(QiNiuStatusEnum.CUSTOM.getCode());        qiNiuAccountDTO.setId(qiNiuAccountDTOResult.getId());        QiNiuAccountDTO resultDTO = qiNiuService.create(qiNiuAccountDTO);        QiNiuRes qiNiuRes = new QiNiuRes();        BeanUtils.copyProperties(resultDTO,qiNiuRes);        return ResponseUtil.success(qiNiuRes);    }}
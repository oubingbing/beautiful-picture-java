package com.kucaroom.mypicture.service.impl;import com.alibaba.fastjson.JSONObject;import com.kucaroom.mypicture.DTO.WeChatAppDTO;import com.kucaroom.mypicture.domain.WeChatApp;import com.kucaroom.mypicture.enums.ResponseEnum;import com.kucaroom.mypicture.exception.WebApiException;import com.kucaroom.mypicture.repository.WeChatAppRepository;import com.kucaroom.mypicture.service.WeChatAppService;import com.kucaroom.mypicture.util.HttpRequestUtil;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.stereotype.Service;import org.springframework.util.LinkedMultiValueMap;import org.springframework.util.MultiValueMap;import org.springframework.util.StringUtils;import org.springframework.web.client.RestTemplate;import java.util.Optional;@Servicepublic class WeChatAppServiceImpl implements WeChatAppService {    @Autowired    private WeChatAppRepository weChatAppRepository;    @Override    public WeChatAppDTO create(WeChatAppDTO weChatAppDTO){        WeChatApp weChatApp = weChatAppRepository.findByAppKey(weChatAppDTO.getAppKey());        if(weChatApp != null){            throw new WebApiException(ResponseEnum.APP_EXIST);        }        WeChatApp weChatAppModel = new WeChatApp();        BeanUtils.copyProperties(weChatAppDTO,weChatAppModel);        WeChatApp result = weChatAppRepository.save(weChatAppModel);        weChatAppDTO.setId(result.getId());        return weChatAppDTO;    }    @Override    public WeChatApp findByAppId(Integer appId) {        Optional<WeChatApp> weChatAppOptional = weChatAppRepository.findById(appId);        if(!weChatAppOptional.isPresent()){            return null;        }        return weChatAppOptional.get();    }    /**     * 根据管理员查询小程序的信息     *     * @author yezi     * @param adminId     * @return     */    @Override    public WeChatAppDTO findByAdminId(Integer adminId) {        WeChatApp weChatApp = weChatAppRepository.findByAdminId(adminId);        if(weChatApp != null){            WeChatAppDTO weChatAppDTO = new WeChatAppDTO();            BeanUtils.copyProperties(weChatApp,weChatAppDTO);            return weChatAppDTO;        }        return null;    }    /**     * 编辑小程序     *     * @author yezi     * @param appId     * @param key     * @param value     * @return     */    @Override    public WeChatAppDTO edit(Integer appId,String key, String value) {        WeChatApp weChatApp = this.findByAppId(appId);        switch (key){            case "name":                weChatApp.setName(value);                break;            case "app_key":                weChatApp.setAppKey(value);                break;            case "app_secret":                weChatApp.setAppSecret(value);            case "logo":                weChatApp.setLogo(value);                break;        }        WeChatApp result = weChatAppRepository.save(weChatApp);        WeChatAppDTO weChatAppDTO = new WeChatAppDTO();        BeanUtils.copyProperties(result,weChatAppDTO);        return weChatAppDTO;    }    /**     * 获取accesstoken     *     * @param appKey     * @param appSecret     * @return     */    public String getAccessToken(String appKey,String appSecret){        String url="https://api.weixin.qq.com/cgi-bin/token";        String param = "grant_type=client_credential&appid="+appKey+"&secret="+appSecret;        String result = HttpRequestUtil.sendGet(url,param);        JSONObject jsonObject = JSONObject.parseObject(result);        String token =  (String) jsonObject.get("access_token");        if(StringUtils.isEmpty(token)){            throw new WebApiException(ResponseEnum.APP_ACCOUNT_ERROR);        }        return token;    }}
package com.kucaroom.mypicture.converter;import com.kucaroom.mypicture.DTO.UserDTO;import com.kucaroom.mypicture.domain.PictureItem;import com.kucaroom.mypicture.enums.UserGenderEnum;import com.kucaroom.mypicture.responseObject.PictureItemRes;import com.kucaroom.mypicture.responseObject.UserRes;import org.springframework.beans.BeanUtils;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.List;import java.util.stream.Collectors;public class UserDTOToUserRes {    /**     * 转化     *     * @author yezi     * @param userDTO     * @return     */    public static UserRes convert(UserDTO userDTO){        UserRes userRes = new UserRes();        BeanUtils.copyProperties(userDTO,userRes);        String gender = UserGenderEnum.OTHER.getMessage();        switch (userRes.getGender()){            case 1:                gender = UserGenderEnum.BOY.getMessage();                break;            case 2:                gender = UserGenderEnum.GIRL.getMessage();                break;        }        userRes.setGenderString(gender);        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");        SimpleDateFormat simpleDateFormatParse = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");        try {            userRes.setCreateAt(simpleDateFormat.format(simpleDateFormatParse.parse(userRes.getCreateAt())));        } catch (ParseException e) {            e.printStackTrace();        }        return  userRes;    }    /**     * 循环转化     *     * @author yezi     * @param userDTOS     * @return     */    public static List<UserRes> convert(List<UserDTO> userDTOS){        return userDTOS.stream().map(                e -> convert(e)        ).collect(Collectors.toList());    }}
package com.kucaroom.mypicture.util;import com.auth0.jwt.JWT;import com.auth0.jwt.JWTVerifier;import com.auth0.jwt.algorithms.Algorithm;import com.auth0.jwt.exceptions.JWTCreationException;import com.auth0.jwt.exceptions.JWTVerificationException;import com.auth0.jwt.interfaces.DecodedJWT;import lombok.extern.slf4j.Slf4j;@Slf4jpublic class JwtUtil {    private String secret;    public JwtUtil(String secret){        this.secret = secret;    }    /**     * 生成token     *     * @param openid     * @return     */    public String create(String openid){        try {            Algorithm algorithm = Algorithm.HMAC256(secret);            String token = JWT.create()                    .withIssuer("system")                    .withSubject(openid)                    .sign(algorithm);            return token;        } catch (JWTCreationException exception){            //Invalid Signing configuration / Couldn't convert Claims.        }        return null;    }    /**     * 解析token     *     * @param token     * @return     */    public String parse(String token){        try {            Algorithm algorithm = Algorithm.HMAC256(secret);            JWTVerifier verifier = JWT.require(algorithm)                    .withIssuer("system")                    .build(); //Reusable verifier instance            DecodedJWT jwt = verifier.verify(token);            return jwt.getSubject();        } catch (JWTVerificationException exception){            //Invalid signature/claims        }        return null;    }}